@Library('pipeline_shared_library') _
def libs = pipelineLibraries(this)

pipeline {
    agent any
    options { quietPeriod(0) }

    stages {
       def hasChanges = false

        stage("Set Global variables") {
            steps {
                libs.setGlobalVariables(serviceGroup, serviceId, version)
            }
        }

        stage("Prepare Environment") {
            steps {
                hasChanges = libs.prepareEnvironment()
                echo "End of Prepare Environment"
            }
        }

        stage("Build and Deploy") {
            when { expression { return hasChanges } }
            libs.buildAndDeploy()
        }

        stage("Finalize") {
            libs.finilizePipeline()
        }
    }
}